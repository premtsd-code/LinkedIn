services:
  kafka:
    image: docker.io/bitnami/kafka:3.8
    container_name: kafka
    volumes:
      - "kafka_data:/bitnami"
      - ./logs/kafka:/opt/bitnami/kafka/logs
    networks:
      - linkedin-network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_HEAP_OPTS=-Xmx512m -Xms512m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=kafka"

  prem-portfolio:
    build:
      context: ./prem-portfolio
      dockerfile: Dockerfile
    container_name: prem-portfolio
    ports:
      - "4200:4200"
    networks:
      - linkedin-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portfolio.rule=Host(`premtsd.com`) || Host(`www.premtsd.com`)"
      - "traefik.http.routers.portfolio.entrypoints=websecure"
      - "traefik.http.routers.portfolio.tls.certresolver=letsencrypt"
      - "traefik.http.services.portfolio.loadbalancer.server.port=80"
      # Redirect www to non-www
      - "traefik.http.middlewares.www-redirect.redirectregex.regex=^https://www.premtsd.com/(.*)"
      - "traefik.http.middlewares.www-redirect.redirectregex.replacement=https://premtsd.com/$${1}"
      - "traefik.http.routers.portfolio.middlewares=www-redirect"

  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - 8090:8080
    depends_on:
      - kafka
    networks:
      - linkedin-network
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    volumes:
      - ./logs/kafbat-ui:/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafka-ui.rule=Host(`kafka.premtsd.com`)"
      - "traefik.http.routers.kafka-ui.entrypoints=websecure"
      - "traefik.http.routers.kafka-ui.tls.certresolver=letsencrypt"
      - "traefik.http.services.kafka-ui.loadbalancer.server.port=8080"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=kafbat-ui"

  linkedin-db:
    image: postgres
    container_name: linkedin-db
    environment:
      - POSTGRES_DB=linkedinDB
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - linkedin-network
    volumes:
      - linkedin-db-data:/var/lib/postgresql/data
      - ./logs/linkedin-db:/var/log/postgresql
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=linkedin-db"

  connections-db:
    image: neo4j
    container_name: connections-db
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - connections-db-data:/data
      - ./logs/connections-db:/logs
    networks:
      - linkedin-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=connections-db"

  discovery-server:
    image: premtsd18/discovery-server
    restart: unless-stopped
    container_name: discovery-server
    networks:
      - linkedin-network
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    volumes:
      - ./logs/discovery-server:/logs/discovery-server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eureka.rule=Host(`eureka.premtsd.com`)"
      - "traefik.http.routers.eureka.entrypoints=websecure"
      - "traefik.http.routers.eureka.tls.certresolver=letsencrypt"
      - "traefik.http.services.eureka.loadbalancer.server.port=8761"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=discovery-server"

  post-service:
    image: premtsd18/post-service
    container_name: post-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - linkedin-db
      - kafka
      - config-server
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: secret123
    volumes:
      - ./app/logs/post-service:/app/logs/post-service
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=post-service"

  user-service:
    image: premtsd18/user-service
    container_name: user-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - linkedin-db
      - kafka
      - config-server
    volumes:
      - ./app/logs/user-service:/app/logs/user-service
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=user-service"

  notification-service:
    image: premtsd18/notification-service
    container_name: notification-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - linkedin-db
      - kafka
      - config-server
    volumes:
      - ./logs/notification-service:/logs/notification-service
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=notification-service"

  connections-service:
    image: premtsd18/connections-service
    container_name: connections-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - connections-db
      - kafka
      - config-server
    volumes:
      - ./logs/connections-service:/logs/connections-service
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=connections-service"

  api-gateway:
    image: premtsd18/api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - config-server
    volumes:
      - ./logs/api-gateway:/logs/api-gateway
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.premtsd.com`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      # CORS middleware for API
      - "traefik.http.middlewares.api-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolalloworiginlist=https://premtsd.com,https://www.premtsd.com"
      - "traefik.http.middlewares.api-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.api-cors.headers.addvaryheader=true"
      - "traefik.http.routers.api.middlewares=api-cors"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=api-gateway"

  config-server:
    image: premtsd18/config-server
    container_name: config-server
    networks:
      - linkedin-network
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./logs/config-server:/logs/config-server
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=config-server"

  redis:
    image: bitnami/redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=secret123
    ports:
      - "6379:6379"
    networks:
      - linkedin-network
    volumes:
      - ./logs/redis:/opt/bitnami/redis/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=redis"

  uploader-service:
    image: premtsd18/uploader-service
    container_name: uploader-service
    networks:
      - linkedin-network
    depends_on:
      - discovery-server
      - config-server
    volumes:
      - ./app/logs/uploader-service:/app/logs/uploader-service
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=uploader-service"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - linkedin-network
    environment:
      - JAVA_OPTS=-Xms256m -Xmx512m
    volumes:
      - ./logs/zipkin:/zipkin/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zipkin.rule=Host(`zipkin.premtsd.com`)"
      - "traefik.http.routers.zipkin.entrypoints=websecure"
      - "traefik.http.routers.zipkin.tls.certresolver=letsencrypt"
      - "traefik.http.services.zipkin.loadbalancer.server.port=9411"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=zipkin"

  opensearch-init:
    image: busybox:latest
    container_name: opensearch-init
    user: root
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      - ./logs/opensearch:/usr/share/opensearch/logs
    command: >
      sh -c "
        mkdir -p /usr/share/opensearch/logs &&
        mkdir -p /usr/share/opensearch/data &&
        chown -R 1000:1000 /usr/share/opensearch/logs &&
        chown -R 1000:1000 /usr/share/opensearch/data &&
        chmod -R 755 /usr/share/opensearch/logs &&
        chmod -R 755 /usr/share/opensearch/data
      "

  opensearch:
    image: opensearchproject/opensearch:2.17.0
    container_name: opensearch
    user: "1000:1000"
    environment:
      - discovery.type=single-node
      - DISABLE_SECURITY_PLUGIN=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_PERFORMANCE_ANALYZER_AGENT_CLI=true
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
    networks:
      - linkedin-network
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      - ./logs/opensearch:/usr/share/opensearch/logs
    depends_on:
      opensearch-init:
        condition: service_completed_successfully
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=opensearch"

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.17.0
    container_name: opensearch-dashboards
    user: "1000:1000"
    environment:
      - OPENSEARCH_HOSTS=http://opensearch:9200
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - "5601:5601"
    depends_on:
      - opensearch
    networks:
      - linkedin-network
    volumes:
      - ./logs/opensearch-dashboards:/usr/share/opensearch-dashboards/logs
    labels:
      - "traefik.enable=true"
      # HTTP route for local development
      - "traefik.http.routers.opensearch-http.rule=Host(`logs.premtsd.com`)"
      - "traefik.http.routers.opensearch-http.entrypoints=web"
      - "traefik.http.services.opensearch-http.loadbalancer.server.port=5601"
      # HTTPS route for production
      - "traefik.http.routers.opensearch.rule=Host(`logs.premtsd.com`)"
      - "traefik.http.routers.opensearch.entrypoints=websecure"
      - "traefik.http.routers.opensearch.tls.certresolver=letsencrypt"
      - "traefik.http.services.opensearch.loadbalancer.server.port=5601"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=opensearch-dashboards"

  opensearch-logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:8.9.0
    container_name: opensearch-logstash
    volumes:
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs/opensearch-logstash:/usr/share/logstash/logs
    ports:
      - "5044:5044"
    networks:
      - linkedin-network
    depends_on:
      - opensearch
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx512m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=opensearch-logstash"

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.4
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./app/logs:/app/logs:ro
      - ./logs:/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs/filebeat:/var/log/filebeat
    networks:
      - linkedin-network
    depends_on:
      - opensearch-logstash
    command: ["--strict.perms=false"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=filebeat"

  # =======================
  # Traefik Reverse Proxy with HTTPS
  # =======================
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=i.prem.tsd@outlook.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard (changed from 8080 to avoid conflict)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/letsencrypt:/letsencrypt
      - ./traefik/certs:/certs
      - ./traefik/config:/etc/traefik/dynamic
    networks:
      - linkedin-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.premtsd.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=traefik"
networks:
  linkedin-network:

volumes:
  kafka_data:
  linkedin-db-data:
  connections-db-data:
  opensearch-data:
  prometheus-data:
  grafana-data: