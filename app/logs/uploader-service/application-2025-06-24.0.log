24-06-2025 08:25:39.799 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 08:30:41.717 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 08:35:41.722 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 08:40:41.726 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 08:45:41.728 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 08:50:41.737 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 08:55:41.741 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 09:00:41.047 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 09:05:41.060 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 09:10:41.067 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 09:15:41.077 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 09:20:41.074 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 09:25:41.078 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 11:25:34.221 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 11:30:33.630 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 11:35:33.638 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 11:40:33.647 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 11:45:34.348 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 11:50:34.349 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 11:55:34.355 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:00:34.361 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:05:34.364 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:10:34.370 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:15:34.376 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:20:34.382 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:25:34.201 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:30:34.209 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:35:34.215 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:40:34.221 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:45:34.228 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:50:34.234 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 12:55:34.240 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:00:34.424 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:05:34.452 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:10:34.438 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:15:34.451 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:20:34.456 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:25:34.443 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:30:34.448 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:35:34.456 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:40:34.467 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:45:34.479 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:50:34.493 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 13:55:34.505 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:00:34.518 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:05:34.531 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:10:34.544 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:11:53.880 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  uploader-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://discovery-server:8761/eureka/} exception=I/O error on PUT request for "http://discovery-server:8761/eureka/apps/UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050": discovery-server: Name does not resolve stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://discovery-server:8761/eureka/apps/UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050": discovery-server: Name does not resolve
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: discovery-server: Name does not resolve
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 19 more

24-06-2025 14:11:53.881 [DiscoveryClient-HeartbeatExecutor-%d] [-] WARN  uploader-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on PUT request for "http://discovery-server:8761/eureka/apps/UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050": discovery-server: Name does not resolve
24-06-2025 14:11:53.881 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://discovery-server:8761/eureka/} exception=I/O error on GET request for "http://discovery-server:8761/eureka/apps/delta": discovery-server stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://discovery-server:8761/eureka/apps/delta": discovery-server
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: discovery-server
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1191)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

24-06-2025 14:11:53.883 [DiscoveryClient-CacheRefreshExecutor-%d] [-] WARN  uploader-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on GET request for "http://discovery-server:8761/eureka/apps/delta": discovery-server
24-06-2025 14:11:53.888 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  uploader-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://discovery-server:8761/eureka/}, exception=I/O error on PUT request for "http://discovery-server:8761/eureka/apps/UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050": discovery-server stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on PUT request for "http://discovery-server:8761/eureka/apps/UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050": discovery-server
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: discovery-server
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 20 more

24-06-2025 14:11:53.889 [DiscoveryClient-HeartbeatExecutor-%d] [-] WARN  uploader-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on PUT request for "http://discovery-server:8761/eureka/apps/UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050": discovery-server
24-06-2025 14:11:53.890 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.n.d.s.t.d.RedirectingEurekaHttpClient.execute - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://discovery-server:8761/eureka/}, exception=I/O error on GET request for "http://discovery-server:8761/eureka/apps/delta": discovery-server stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://discovery-server:8761/eureka/apps/delta": discovery-server
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: discovery-server
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 23 more

24-06-2025 14:11:53.891 [DiscoveryClient-CacheRefreshExecutor-%d] [-] WARN  uploader-service-c.n.d.s.t.d.RetryableEurekaHttpClient.execute - Request execution failed with message: I/O error on GET request for "http://discovery-server:8761/eureka/apps/delta": discovery-server
24-06-2025 14:11:53.892 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1080)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:963)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1441)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)

24-06-2025 14:11:53.891 [DiscoveryClient-HeartbeatExecutor-%d] [-] ERROR uploader-service-c.netflix.discovery.DiscoveryClient.renew - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:845)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1402)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
24-06-2025 14:12:23.955 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.renew - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050 - Re-registering apps/UPLOADER-SERVICE
24-06-2025 14:12:23.956 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050: registering service...
24-06-2025 14:12:23.988 [DiscoveryClient-HeartbeatExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050 - registration status: 204
24-06-2025 14:12:53.931 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
24-06-2025 14:12:53.932 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
24-06-2025 14:12:53.932 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
24-06-2025 14:12:53.932 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
24-06-2025 14:12:53.933 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
24-06-2025 14:12:53.933 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: false
24-06-2025 14:12:53.933 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
24-06-2025 14:12:53.940 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
24-06-2025 14:14:26.101 [SpringApplicationShutdownHook] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application UPLOADER-SERVICE with eureka with status DOWN
24-06-2025 14:14:26.104 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750774466104, current=DOWN, previous=UP]
24-06-2025 14:14:26.106 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050: registering service...
24-06-2025 14:14:26.132 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050 - registration status: 204
24-06-2025 14:14:26.877 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
24-06-2025 14:14:29.879 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
24-06-2025 14:14:29.893 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_UPLOADER-SERVICE/ba092dbc87d8:uploader-service:9050 - deregister  status: 200
24-06-2025 14:14:29.894 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
24-06-2025 14:16:14.837 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarting - Starting UploaderServiceApplication using Java 21 with PID 215 (/app/target/classes started by root in /app)
24-06-2025 14:16:14.840 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
24-06-2025 14:16:14.891 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://config-server:8888
24-06-2025 14:16:14.892 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=uploader-service, profiles=[default], label=null, version=aaf2894444966b8d2d4bbacdf2c85a13ace79c0b, state=
24-06-2025 14:16:16.452 [main] [-] INFO  uploader-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=a3b54b77-737d-393b-b9e1-f007d5e1ff58
24-06-2025 14:16:16.504 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
24-06-2025 14:16:16.507 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
24-06-2025 14:16:16.756 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9050 (http)
24-06-2025 14:16:16.774 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9050"]
24-06-2025 14:16:16.777 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-06-2025 14:16:16.777 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.33]
24-06-2025 14:16:16.838 [main] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring embedded WebApplicationContext
24-06-2025 14:16:16.838 [main] [-] INFO  uploader-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1944 ms
24-06-2025 14:16:18.465 [main] [-] INFO  uploader-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
24-06-2025 14:16:18.503 [main] [-] WARN  uploader-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-06-2025 14:16:18.511 [main] [-] INFO  uploader-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 25 endpoints beneath base path '/actuator'
24-06-2025 14:16:18.590 [main] [-] INFO  uploader-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
24-06-2025 14:16:18.628 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
24-06-2025 14:16:18.634 [main] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:16:18.644 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
24-06-2025 14:16:18.646 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
24-06-2025 14:16:18.646 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
24-06-2025 14:16:18.647 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
24-06-2025 14:16:18.648 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
24-06-2025 14:16:18.648 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
24-06-2025 14:16:18.650 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
24-06-2025 14:16:18.825 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
24-06-2025 14:16:18.827 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
24-06-2025 14:16:18.832 [main] [-] INFO  uploader-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
24-06-2025 14:16:18.835 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1750774578835 with initial instances count: 0
24-06-2025 14:16:18.841 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application UPLOADER-SERVICE with eureka with status UP
24-06-2025 14:16:18.842 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750774578842, current=UP, previous=STARTING]
24-06-2025 14:16:18.846 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/814d91145fcb:uploader-service:9050: registering service...
24-06-2025 14:16:18.848 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9050"]
24-06-2025 14:16:18.875 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9050 (http) with context path '/uploads'
24-06-2025 14:16:18.876 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9050
24-06-2025 14:16:18.900 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/814d91145fcb:uploader-service:9050 - registration status: 204
24-06-2025 14:16:18.903 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarted - Started UploaderServiceApplication in 9.852 seconds (process running for 10.821)
24-06-2025 14:16:48.830 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
24-06-2025 14:16:48.831 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
24-06-2025 14:16:48.831 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
24-06-2025 14:16:48.831 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
24-06-2025 14:16:48.832 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
24-06-2025 14:16:48.832 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: false
24-06-2025 14:16:48.832 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
24-06-2025 14:16:48.849 [DiscoveryClient-CacheRefreshExecutor-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
24-06-2025 14:21:18.643 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:24:17.428 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-06-2025 14:24:17.428 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
24-06-2025 14:24:17.430 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
24-06-2025 14:24:17.466 [http-nio-9050-exec-1] [685ab511a04c0b42ef85c2ea4b8dc63d-5828b35c61213351] INFO  uploader-service-c.p.l.u.c.FileUploadController.uploadImage - Received upload request
24-06-2025 14:24:17.466 [http-nio-9050-exec-1] [685ab511a04c0b42ef85c2ea4b8dc63d-5828b35c61213351] INFO  uploader-service-c.p.l.u.s.CloudinaryFileUploaderService.upload - Uploading file to Cloudinary...
24-06-2025 14:24:19.696 [http-nio-9050-exec-1] [685ab511a04c0b42ef85c2ea4b8dc63d-5828b35c61213351] INFO  uploader-service-c.p.l.u.s.CloudinaryFileUploaderService.upload - Upload successful: https://res.cloudinary.com/dhpwsr9l0/image/upload/v1750775058/sbbheotg6iq5zrhpx38d.png
24-06-2025 14:25:05.961 [http-nio-9050-exec-2] [685ab5417efc43ac2f61089b138956e4-cf3e7b313000d7b4] INFO  uploader-service-c.p.l.u.c.FileUploadController.uploadImage - Received upload request
24-06-2025 14:25:05.961 [http-nio-9050-exec-2] [685ab5417efc43ac2f61089b138956e4-cf3e7b313000d7b4] INFO  uploader-service-c.p.l.u.s.CloudinaryFileUploaderService.upload - Uploading file to Cloudinary...
24-06-2025 14:25:07.513 [http-nio-9050-exec-2] [685ab5417efc43ac2f61089b138956e4-cf3e7b313000d7b4] INFO  uploader-service-c.p.l.u.s.CloudinaryFileUploaderService.upload - Upload successful: https://res.cloudinary.com/dhpwsr9l0/image/upload/v1750775106/wmresh0vc9k3ydr0eigq.png
24-06-2025 14:26:18.613 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:31:18.599 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:36:18.593 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:41:18.592 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:46:18.593 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:51:18.596 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 14:56:18.600 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:01:18.604 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:06:18.608 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:11:18.611 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:16:18.615 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:18:24.437 [http-nio-9050-exec-5] [685ac1c0bd842ece4f394c18f7d555cb-352a17561d716684] ERROR uploader-service-c.p.l.u.e.GlobalExceptionHandler.handleGlobalException - Unhandled exception caught: No static resource v3/api-docs.
24-06-2025 15:21:18.618 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:26:18.622 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:27:52.290 [SpringApplicationShutdownHook] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application UPLOADER-SERVICE with eureka with status DOWN
24-06-2025 15:27:52.290 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750778872290, current=DOWN, previous=UP]
24-06-2025 15:27:52.291 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/814d91145fcb:uploader-service:9050: registering service...
24-06-2025 15:27:52.300 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/814d91145fcb:uploader-service:9050 - registration status: 204
24-06-2025 15:27:52.472 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
24-06-2025 15:27:55.473 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
24-06-2025 15:27:55.483 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_UPLOADER-SERVICE/814d91145fcb:uploader-service:9050 - deregister  status: 200
24-06-2025 15:27:55.483 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
24-06-2025 15:28:08.739 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarting - Starting UploaderServiceApplication using Java 21 with PID 181 (/app/target/classes started by root in /app)
24-06-2025 15:28:08.741 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
24-06-2025 15:28:08.764 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://config-server:8888
24-06-2025 15:28:08.765 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=uploader-service, profiles=[default], label=null, version=aaf2894444966b8d2d4bbacdf2c85a13ace79c0b, state=
24-06-2025 15:28:09.568 [main] [-] INFO  uploader-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=b988f7ed-88bb-3c83-942c-125077693c66
24-06-2025 15:28:09.611 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
24-06-2025 15:28:09.613 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
24-06-2025 15:28:09.748 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9050 (http)
24-06-2025 15:28:09.759 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9050"]
24-06-2025 15:28:09.761 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-06-2025 15:28:09.762 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.33]
24-06-2025 15:28:09.811 [main] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring embedded WebApplicationContext
24-06-2025 15:28:09.812 [main] [-] INFO  uploader-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1045 ms
24-06-2025 15:28:10.764 [main] [-] INFO  uploader-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
24-06-2025 15:28:10.783 [main] [-] WARN  uploader-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-06-2025 15:28:10.789 [main] [-] INFO  uploader-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 25 endpoints beneath base path '/actuator'
24-06-2025 15:28:10.834 [main] [-] INFO  uploader-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
24-06-2025 15:28:10.848 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
24-06-2025 15:28:10.851 [main] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:28:10.857 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
24-06-2025 15:28:10.857 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
24-06-2025 15:28:10.857 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
24-06-2025 15:28:10.857 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
24-06-2025 15:28:10.858 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
24-06-2025 15:28:10.858 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
24-06-2025 15:28:10.858 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
24-06-2025 15:28:10.956 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
24-06-2025 15:28:10.958 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
24-06-2025 15:28:10.959 [main] [-] INFO  uploader-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
24-06-2025 15:28:10.960 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1750778890960 with initial instances count: 5
24-06-2025 15:28:10.962 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application UPLOADER-SERVICE with eureka with status UP
24-06-2025 15:28:10.962 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750778890962, current=UP, previous=STARTING]
24-06-2025 15:28:10.964 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/00aa6d071bc7:uploader-service:9050: registering service...
24-06-2025 15:28:10.964 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9050"]
24-06-2025 15:28:10.978 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9050 (http) with context path '/uploads'
24-06-2025 15:28:10.979 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9050
24-06-2025 15:28:10.990 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarted - Started UploaderServiceApplication in 5.412 seconds (process running for 5.761)
24-06-2025 15:28:10.998 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/00aa6d071bc7:uploader-service:9050 - registration status: 204
24-06-2025 15:28:27.554 [SpringApplicationShutdownHook] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application UPLOADER-SERVICE with eureka with status DOWN
24-06-2025 15:28:27.555 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750778907555, current=DOWN, previous=UP]
24-06-2025 15:28:27.556 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/00aa6d071bc7:uploader-service:9050: registering service...
24-06-2025 15:28:27.564 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/00aa6d071bc7:uploader-service:9050 - registration status: 204
24-06-2025 15:28:27.981 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
24-06-2025 15:28:30.983 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
24-06-2025 15:28:30.991 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_UPLOADER-SERVICE/00aa6d071bc7:uploader-service:9050 - deregister  status: 200
24-06-2025 15:28:30.991 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
24-06-2025 15:28:49.638 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarting - Starting UploaderServiceApplication using Java 21 with PID 191 (/app/target/classes started by root in /app)
24-06-2025 15:28:49.641 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
24-06-2025 15:28:49.669 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://config-server:8888
24-06-2025 15:28:49.669 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=uploader-service, profiles=[default], label=null, version=aaf2894444966b8d2d4bbacdf2c85a13ace79c0b, state=
24-06-2025 15:28:50.506 [main] [-] INFO  uploader-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=b988f7ed-88bb-3c83-942c-125077693c66
24-06-2025 15:28:50.541 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
24-06-2025 15:28:50.543 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
24-06-2025 15:28:50.668 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9050 (http)
24-06-2025 15:28:50.678 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9050"]
24-06-2025 15:28:50.681 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-06-2025 15:28:50.681 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.33]
24-06-2025 15:28:50.725 [main] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring embedded WebApplicationContext
24-06-2025 15:28:50.726 [main] [-] INFO  uploader-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1055 ms
24-06-2025 15:28:51.504 [main] [-] INFO  uploader-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
24-06-2025 15:28:51.529 [main] [-] WARN  uploader-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-06-2025 15:28:51.534 [main] [-] INFO  uploader-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 25 endpoints beneath base path '/actuator'
24-06-2025 15:28:51.579 [main] [-] INFO  uploader-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
24-06-2025 15:28:51.603 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
24-06-2025 15:28:51.608 [main] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:28:51.616 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
24-06-2025 15:28:51.616 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
24-06-2025 15:28:51.616 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
24-06-2025 15:28:51.617 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
24-06-2025 15:28:51.617 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
24-06-2025 15:28:51.618 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
24-06-2025 15:28:51.618 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
24-06-2025 15:28:51.746 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
24-06-2025 15:28:51.747 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
24-06-2025 15:28:51.749 [main] [-] INFO  uploader-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
24-06-2025 15:28:51.750 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1750778931750 with initial instances count: 7
24-06-2025 15:28:51.753 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application UPLOADER-SERVICE with eureka with status UP
24-06-2025 15:28:51.753 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750778931753, current=UP, previous=STARTING]
24-06-2025 15:28:51.755 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/cccf03514200:uploader-service:9050: registering service...
24-06-2025 15:28:51.755 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9050"]
24-06-2025 15:28:51.769 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9050 (http) with context path '/uploads'
24-06-2025 15:28:51.770 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9050
24-06-2025 15:28:51.781 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarted - Started UploaderServiceApplication in 7.134 seconds (process running for 7.459)
24-06-2025 15:28:51.785 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/cccf03514200:uploader-service:9050 - registration status: 204
24-06-2025 15:29:53.986 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-06-2025 15:29:53.986 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
24-06-2025 15:29:53.988 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
24-06-2025 15:29:54.006 [http-nio-9050-exec-1] [685ac47132406a49f420233d7e1bf324-8ce8555be04ce184] ERROR uploader-service-c.p.l.u.e.GlobalExceptionHandler.handleGlobalException - Unhandled exception caught: No static resource v3/api-docs.
24-06-2025 15:33:51.624 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:38:51.628 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:41:08.366 [http-nio-9050-exec-2] [685ac71405d492381fc2f1b947aea487-aa500785b55178f2] ERROR uploader-service-c.p.l.u.e.GlobalExceptionHandler.handleGlobalException - Unhandled exception caught: No static resource v3/api-docs.
24-06-2025 15:41:22.388 [http-nio-9050-exec-3] [685ac7227b164a7b77d738dcacbdc49f-0ee41df06c83b01e] ERROR uploader-service-c.p.l.u.e.GlobalExceptionHandler.handleGlobalException - Unhandled exception caught: No static resource v3/api-docs.
24-06-2025 15:43:51.633 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:47:18.678 [http-nio-9050-exec-4] [685ac886772ef523bc8647fec00a5b27-0f36019a0afc14a5] ERROR uploader-service-c.p.l.u.e.GlobalExceptionHandler.handleGlobalException - Unhandled exception caught: No static resource v3/api-docs.
24-06-2025 15:48:51.638 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:53:51.642 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:54:59.862 [SpringApplicationShutdownHook] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application UPLOADER-SERVICE with eureka with status DOWN
24-06-2025 15:54:59.863 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750780499863, current=DOWN, previous=UP]
24-06-2025 15:54:59.863 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/cccf03514200:uploader-service:9050: registering service...
24-06-2025 15:54:59.872 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/cccf03514200:uploader-service:9050 - registration status: 204
24-06-2025 15:55:00.502 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
24-06-2025 15:55:03.504 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
24-06-2025 15:55:03.510 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_UPLOADER-SERVICE/cccf03514200:uploader-service:9050 - deregister  status: 200
24-06-2025 15:55:03.511 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
24-06-2025 15:55:16.975 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarting - Starting UploaderServiceApplication using Java 21 with PID 185 (/app/target/classes started by root in /app)
24-06-2025 15:55:16.978 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
24-06-2025 15:55:17.010 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://config-server:8888
24-06-2025 15:55:17.011 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=uploader-service, profiles=[default], label=null, version=aaf2894444966b8d2d4bbacdf2c85a13ace79c0b, state=
24-06-2025 15:55:18.140 [main] [-] INFO  uploader-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=ee030b29-9e37-350e-90cf-aee743661215
24-06-2025 15:55:18.179 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
24-06-2025 15:55:18.181 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
24-06-2025 15:55:18.330 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9050 (http)
24-06-2025 15:55:18.340 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9050"]
24-06-2025 15:55:18.342 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-06-2025 15:55:18.342 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.33]
24-06-2025 15:55:18.389 [main] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring embedded WebApplicationContext
24-06-2025 15:55:18.389 [main] [-] INFO  uploader-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1377 ms
24-06-2025 15:55:19.418 [main] [-] INFO  uploader-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
24-06-2025 15:55:19.438 [main] [-] WARN  uploader-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-06-2025 15:55:19.443 [main] [-] INFO  uploader-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 25 endpoints beneath base path '/actuator'
24-06-2025 15:55:19.497 [main] [-] INFO  uploader-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
24-06-2025 15:55:19.515 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
24-06-2025 15:55:19.519 [main] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 15:55:19.524 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
24-06-2025 15:55:19.525 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
24-06-2025 15:55:19.525 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
24-06-2025 15:55:19.525 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
24-06-2025 15:55:19.526 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
24-06-2025 15:55:19.526 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
24-06-2025 15:55:19.526 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
24-06-2025 15:55:19.630 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
24-06-2025 15:55:19.632 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
24-06-2025 15:55:19.633 [main] [-] INFO  uploader-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
24-06-2025 15:55:19.634 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1750780519634 with initial instances count: 7
24-06-2025 15:55:19.636 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application UPLOADER-SERVICE with eureka with status UP
24-06-2025 15:55:19.637 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750780519637, current=UP, previous=STARTING]
24-06-2025 15:55:19.638 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9050"]
24-06-2025 15:55:19.638 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/50d78075a346:uploader-service:9050: registering service...
24-06-2025 15:55:19.649 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9050 (http) with context path '/uploads'
24-06-2025 15:55:19.650 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9050
24-06-2025 15:55:19.661 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarted - Started UploaderServiceApplication in 5.999 seconds (process running for 6.279)
24-06-2025 15:55:19.672 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/50d78075a346:uploader-service:9050 - registration status: 204
24-06-2025 15:55:56.752 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-06-2025 15:55:56.752 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
24-06-2025 15:55:56.753 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 1 ms
24-06-2025 15:55:56.854 [http-nio-9050-exec-1] [685aca8cc64b95084bde79a6e1497636-18a4696eada85993] INFO  uploader-service-o.s.api.AbstractOpenApiResource.getOpenApi - Init duration for springdoc-openapi is: 74 ms
24-06-2025 15:57:49.272 [http-nio-9050-exec-4] [685acafd0d632f00aea4412556d4ae27-ef4a3ede3a278c8c] ERROR uploader-service-c.p.l.u.e.GlobalExceptionHandler.handleGlobalException - Unhandled exception caught: Current request is not a multipart request
24-06-2025 16:00:19.532 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 16:03:39.801 [SpringApplicationShutdownHook] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application UPLOADER-SERVICE with eureka with status DOWN
24-06-2025 16:03:39.801 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750781019801, current=DOWN, previous=UP]
24-06-2025 16:03:39.802 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/50d78075a346:uploader-service:9050: registering service...
24-06-2025 16:03:39.809 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/50d78075a346:uploader-service:9050 - registration status: 204
24-06-2025 16:03:40.201 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
24-06-2025 16:03:43.202 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
24-06-2025 16:03:43.211 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_UPLOADER-SERVICE/50d78075a346:uploader-service:9050 - deregister  status: 200
24-06-2025 16:03:43.211 [SpringApplicationShutdownHook] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
24-06-2025 16:03:52.549 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarting - Starting UploaderServiceApplication using Java 21 with PID 181 (/app/target/classes started by root in /app)
24-06-2025 16:03:52.550 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
24-06-2025 16:03:52.573 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://config-server:8888
24-06-2025 16:03:52.574 [main] [-] INFO  uploader-service-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=uploader-service, profiles=[default], label=null, version=aaf2894444966b8d2d4bbacdf2c85a13ace79c0b, state=
24-06-2025 16:03:53.404 [main] [-] INFO  uploader-service-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=ee030b29-9e37-350e-90cf-aee743661215
24-06-2025 16:03:53.450 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
24-06-2025 16:03:53.453 [main] [-] WARN  uploader-service-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.
24-06-2025 16:03:53.615 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port 9050 (http)
24-06-2025 16:03:53.628 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Initializing ProtocolHandler ["http-nio-9050"]
24-06-2025 16:03:53.631 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardService.log - Starting service [Tomcat]
24-06-2025 16:03:53.632 [main] [-] INFO  uploader-service-o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/10.1.33]
24-06-2025 16:03:53.692 [main] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring embedded WebApplicationContext
24-06-2025 16:03:53.692 [main] [-] INFO  uploader-service-o.s.b.w.s.c.ServletWebServerApplicationContext.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 1117 ms
24-06-2025 16:03:54.667 [main] [-] INFO  uploader-service-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
24-06-2025 16:03:54.688 [main] [-] WARN  uploader-service-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-06-2025 16:03:54.694 [main] [-] INFO  uploader-service-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 25 endpoints beneath base path '/actuator'
24-06-2025 16:03:54.747 [main] [-] INFO  uploader-service-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
24-06-2025 16:03:54.761 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
24-06-2025 16:03:54.767 [main] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 16:03:54.773 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
24-06-2025 16:03:54.773 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
24-06-2025 16:03:54.773 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
24-06-2025 16:03:54.774 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
24-06-2025 16:03:54.774 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
24-06-2025 16:03:54.774 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
24-06-2025 16:03:54.774 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
24-06-2025 16:03:54.887 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
24-06-2025 16:03:54.889 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
24-06-2025 16:03:54.890 [main] [-] INFO  uploader-service-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
24-06-2025 16:03:54.892 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1750781034891 with initial instances count: 7
24-06-2025 16:03:54.896 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application UPLOADER-SERVICE with eureka with status UP
24-06-2025 16:03:54.896 [main] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1750781034896, current=UP, previous=STARTING]
24-06-2025 16:03:54.898 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/31a10d0e8ff9:uploader-service:9050: registering service...
24-06-2025 16:03:54.898 [main] [-] INFO  uploader-service-o.a.coyote.http11.Http11NioProtocol.log - Starting ProtocolHandler ["http-nio-9050"]
24-06-2025 16:03:54.911 [main] [-] INFO  uploader-service-o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port 9050 (http) with context path '/uploads'
24-06-2025 16:03:54.912 [main] [-] INFO  uploader-service-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 9050
24-06-2025 16:03:54.925 [main] [-] INFO  uploader-service-c.p.l.u.UploaderServiceApplication.logStarted - Started UploaderServiceApplication in 4.105 seconds (process running for 4.328)
24-06-2025 16:03:54.929 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  uploader-service-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_UPLOADER-SERVICE/31a10d0e8ff9:uploader-service:9050 - registration status: 204
24-06-2025 16:03:58.093 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.a.c.c.C.[.[localhost].[/uploads].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-06-2025 16:03:58.093 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
24-06-2025 16:03:58.095 [http-nio-9050-exec-1] [-] INFO  uploader-service-o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 2 ms
24-06-2025 16:03:58.213 [http-nio-9050-exec-1] [685acc6ec08bda6ab4e201e887a53586-b6e7fdf9fd664681] INFO  uploader-service-o.s.api.AbstractOpenApiResource.getOpenApi - Init duration for springdoc-openapi is: 89 ms
24-06-2025 16:05:11.713 [http-nio-9050-exec-3] [685accb7506116927e36244381ae3666-33bd44df24ed4061] INFO  uploader-service-c.p.l.u.c.FileUploadController.uploadImage - Received upload request
24-06-2025 16:05:11.714 [http-nio-9050-exec-3] [685accb7506116927e36244381ae3666-33bd44df24ed4061] INFO  uploader-service-c.p.l.u.s.CloudinaryFileUploaderService.upload - Uploading file to Cloudinary...
24-06-2025 16:05:13.257 [http-nio-9050-exec-3] [685accb7506116927e36244381ae3666-33bd44df24ed4061] INFO  uploader-service-c.p.l.u.s.CloudinaryFileUploaderService.upload - Upload successful: https://res.cloudinary.com/dhpwsr9l0/image/upload/v1750781112/xgvulrr669xmnmw3q9tu.png
24-06-2025 16:08:54.781 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 16:13:54.785 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
24-06-2025 16:18:54.791 [AsyncResolver-bootstrap-executor-%d] [-] INFO  uploader-service-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
